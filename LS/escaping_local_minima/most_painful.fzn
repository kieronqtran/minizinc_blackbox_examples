predicate fzn_blackbox(array [int] of var int: int_input,array [int] of var float: float_input,array [int] of var int: int_output,array [int] of var float: float_output);
array [1..2] of int: X_INTRODUCED_5_ = [1,-1];
var -2..6: x:: output_var;
var -4..4: y:: output_var;
var -100.0..100.0: obj:: output_var;
var 0..6: X_INTRODUCED_3_ ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_4_ ::var_is_introduced :: is_defined_var;
array [1..1] of var float: X_INTRODUCED_6_ ::var_is_introduced  = [obj];
array [1..2] of var int: X_INTRODUCED_7_ ::var_is_introduced  = [x,y];
constraint int_abs(x,X_INTRODUCED_3_):: defines_var(X_INTRODUCED_3_);
constraint int_abs(y,X_INTRODUCED_4_):: defines_var(X_INTRODUCED_4_);
constraint int_lin_ne(X_INTRODUCED_5_,[X_INTRODUCED_3_,X_INTRODUCED_4_],0);
constraint fzn_blackbox(X_INTRODUCED_7_,[],[],X_INTRODUCED_6_):: blackbox_dll("./libbb_most_painful.so");
solve  minimize obj;
