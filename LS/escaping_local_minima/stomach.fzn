predicate fzn_blackbox(array [int] of var int: int_input,array [int] of var float: float_input,array [int] of var int: int_output,array [int] of var float: float_output);
array [1..2] of int: X_INTRODUCED_3_ = [1,-1];
var -4..4: x:: output_var;
var -4..4: y:: output_var;
var -100.0..100.0: obj:: output_var;
var 0..4: X_INTRODUCED_1_ ::var_is_introduced :: is_defined_var;
var 0..4: X_INTRODUCED_2_ ::var_is_introduced :: is_defined_var;
array [1..1] of var float: X_INTRODUCED_4_ ::var_is_introduced  = [obj];
array [1..4] of var int: X_INTRODUCED_5_ ::var_is_introduced  = [x,y,x,y];
constraint int_abs(x,X_INTRODUCED_1_):: defines_var(X_INTRODUCED_1_);
constraint int_abs(y,X_INTRODUCED_2_):: defines_var(X_INTRODUCED_2_);
constraint int_lin_ne(X_INTRODUCED_3_,[X_INTRODUCED_1_,X_INTRODUCED_2_],0);
constraint fzn_blackbox(X_INTRODUCED_5_,[],[],X_INTRODUCED_4_):: blackbox_dll("./libbb_stomach.so");
solve  minimize obj;
